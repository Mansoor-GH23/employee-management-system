name: Build and Deploy Backend + Functions to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_LOGIN_SERVER: emsacr1234-bebrayhhgdd8e4gx.azurecr.io
  IMAGE_NAME: ems-api-app
  APP_SERVICE_NAME: ems-api-app
  RESOURCE_GROUP: employee-management-rg
  APP_URL: https://ems-api-app-cxesaafubzgta6cp.centralus-01.azurewebsites.net
  FUNCTIONS_APP_NAME: ems-functions   # <-- your Azure Function App name

jobs:
  build-test-deploy-api:
    runs-on: ubuntu-latest
    concurrency:
      group: backend-cd-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./Backend/EmployeeManagementSystem.sln

      - name: Build solution
        run: dotnet build ./Backend/EmployeeManagementSystem.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ./Backend/EmployeeManagementSystem.Tests/EmployeeManagementSystem.Tests.csproj --configuration Release --no-build --verbosity normal

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend
          file: ./Backend/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Verify Azure resources exist
        run: |
          az group show -n ${{ env.RESOURCE_GROUP }} --query name -o tsv
          az webapp show -n ${{ env.APP_SERVICE_NAME }} -g ${{ env.RESOURCE_GROUP }} --query name -o tsv

      - name: Configure Azure Web App container
        run: |
          az webapp config appsettings set \
            --name ${{ env.APP_SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --settings ASPNETCORE_ENVIRONMENT=Production WEBSITES_PORT=80

          az webapp config container set \
            --name ${{ env.APP_SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --docker-registry-server-url https://${{ env.ACR_LOGIN_SERVER }} \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}

          az webapp restart --name ${{ env.APP_SERVICE_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}

      - name: Smoke Test after Deployment
        run: |
          echo "Waiting for app to warm up..."
          sleep 90
          for i in {1..10}; do
            if curl --silent --fail ${{ env.APP_URL }}/swagger/index.html > /dev/null; then
              echo "✅ API smoke test passed!"
              exit 0
            fi
            echo "Retrying in 20s... attempt $i"
            sleep 20
          done
          echo "❌ API smoke test failed!"
          exit 1

  deploy-functions:
    runs-on: ubuntu-latest
    needs: build-test-deploy-api   # deploy Functions after API succeeds

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./Functions/ems-functions/ems-functions.csproj

      - name: Build Functions project
        run: dotnet build ./Functions/ems-functions/ems-functions.csproj --configuration Release --no-restore

      - name: Publish Functions package
        run: dotnet publish ./Functions/ems-functions/ems-functions.csproj --configuration Release --output ./publish_output

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Functions
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTIONS_APP_NAME }}
          package: ./publish_output
