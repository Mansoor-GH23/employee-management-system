{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authService) {\n      this.authService = authService;\n    }\n    intercept(request, next) {\n      const token = this.authService.getToken();\n      if (token) {\n        const cloned = request.clone({\n          headers: request.headers.set('Authorization', `Bearer ${token}`)\n        });\n        return next.handle(cloned);\n      }\n      return next.handle(request);\n    }\n    static #_ = this.ɵfac = function AuthInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n  return AuthInterceptor;\n})();","map":{"version":3,"names":["AuthInterceptor","constructor","authService","intercept","request","next","token","getToken","cloned","clone","headers","set","handle","_","i0","ɵɵinject","i1","AuthService","_2","factory","ɵfac"],"sources":["D:\\VS Cummunity Projects\\employee-management-monorepo\\employee-management-system\\frontend\\src\\app\\core\\interceptors\\auth-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.authService.getToken();\n    if (token) {\n      const cloned = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${token}`)\n      });\n      return next.handle(cloned);\n    }\n    return next.handle(request);\n  }\n}\n"],"mappings":";;AAMA,WAAaA,eAAe;EAAtB,MAAOA,eAAe;IAE1BC,YAAoBC,WAAwB;MAAxB,KAAAA,WAAW,GAAXA,WAAW;IAAgB;IAE/CC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;MACpD,MAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;MACzC,IAAID,KAAK,EAAE;QACT,MAAME,MAAM,GAAGJ,OAAO,CAACK,KAAK,CAAC;UAC3BC,OAAO,EAAEN,OAAO,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUL,KAAK,EAAE;SAChE,CAAC;QACF,OAAOD,IAAI,CAACO,MAAM,CAACJ,MAAM,CAAC;MAC5B;MACA,OAAOH,IAAI,CAACO,MAAM,CAACR,OAAO,CAAC;IAC7B;IAAC,QAAAS,CAAA,G;uCAbUb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;IAAA,QAAAC,EAAA,G;aAAflB,eAAe;MAAAmB,OAAA,EAAfnB,eAAe,CAAAoB;IAAA;;SAAfpB,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}