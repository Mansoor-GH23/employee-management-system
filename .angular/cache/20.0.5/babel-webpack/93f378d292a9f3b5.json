{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/auth\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\n//For git changes to record\n//for git changes to record new\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.username = '';\n      this.password = '';\n    }\n    onSubmit() {\n      this.authService.login(this.username, this.password).subscribe({\n        next: res => {\n          this.authService.saveToken(res.token);\n          alert('Login successful!');\n          // Optionally: this.router.navigate(['/employee']);\n        },\n        error: () => {\n          alert('Login failed');\n        }\n      });\n    }\n    ngOnInit() {\n      if (this.authService.getToken()) {\n        this.router.navigate(['/employee']); // or any default private page\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 15,\n      vars: 3,\n      consts: [[\"loginForm\", \"ngForm\"], [1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n          i0.ɵɵtext(7, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"button\", 8);\n          i0.ɵɵtext(14, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const loginForm_r2 = i0.ɵɵreference(4);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !loginForm_r2.valid);\n        }\n      },\n      dependencies: [CommonModule, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 80px auto;\\n  padding: 30px;\\n  border: 1px solid #ddd;\\n  border-radius: 8px;\\n  background-color: #f9f9f9;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9sb2dpbi5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luOiA4MHB4IGF1dG87XG4gIHBhZGRpbmc6IDMwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcbn1cblxuaDIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n  return LoginComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","LoginComponent","constructor","authService","router","username","password","onSubmit","login","subscribe","next","res","saveToken","token","alert","error","ngOnInit","getToken","navigate","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵtwoWayListener","LoginComponent_Template_input_ngModelChange_8_listener","$event","ɵɵtwoWayBindingSet","LoginComponent_Template_input_ngModelChange_12_listener","ɵɵadvance","ɵɵtwoWayProperty","ɵɵproperty","loginForm_r2","valid","i3","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sources":["D:\\VS Cummunity Projects\\employee-management-monorepo\\employee-management-system\\frontend\\src\\app\\features\\auth\\login.ts","D:\\VS Cummunity Projects\\employee-management-monorepo\\employee-management-system\\frontend\\src\\app\\features\\auth\\login.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../core/services/auth';\n\n//For git changes to record\n//for git changes to record new\n@Component({\nselector: 'app-login',\nstandalone: true,\nimports: [CommonModule, FormsModule],\ntemplateUrl: './login.html',\nstyleUrls: ['./login.css'],\n})\nexport class LoginComponent {\nusername = '';\npassword = '';\n\nconstructor(private authService: AuthService, private router: Router) {}\n\nonSubmit() {\nthis.authService.login(this.username, this.password).subscribe({\nnext: (res) => {\nthis.authService.saveToken(res.token);\nalert('Login successful!');\n// Optionally: this.router.navigate(['/employee']);\n},\nerror: () => {\nalert('Login failed');\n},\n});\n}\n\nngOnInit() {\n  if (this.authService.getToken()) {\n    this.router.navigate(['/employee']); // or any default private page\n  }\n    }\n\n}","<div class=\"login-container\">\n  <h2>Login</h2>\n\n  <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"username\">Username</label>\n      <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"username\" required class=\"form-control\" />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required class=\"form-control\" />\n    </div>\n\n    <button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btn btn-primary\">Login</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}