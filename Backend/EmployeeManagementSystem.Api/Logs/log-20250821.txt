2025-08-21 01:15:31.571 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 01:15:31.757 -07:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-08-21 01:15:31.779 -07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 08:15:31.7747161+00:00');
SELECT changes();
2025-08-21 01:15:31.915 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-08-21 01:15:31.939 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-21 01:15:31.949 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-21 01:15:31.984 -07:00 [INF] Applying migration '20250820020348_UpdateEmployeeSchema'.
2025-08-21 01:15:32.061 -07:00 [WRN] The migration operation 'PRAGMA foreign_keys = 0;
' from migration 'UpdateEmployeeSchema' cannot be executed in a transaction. If the app is terminated or an unrecoverable error occurs while this operation is being executed then the migration will be left in a partially applied state and would need to be reverted manually before it can be applied again. Create a separate migration that contains just this operation.
2025-08-21 01:15:32.117 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Employees_Email" ON "Employees" ("Email");
2025-08-21 01:15:32.214 -07:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ef_temp_Users" (
    "Id" int NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY AUTOINCREMENT,
    "Password" nvarchar(max) NOT NULL,
    "Role" nvarchar(max) NOT NULL,
    "Username" nvarchar(max) NOT NULL
);
2025-08-21 01:59:38.520 -07:00 [INF] Executed DbCommand (292ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 01:59:38.639 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 01:59:38.910 -07:00 [INF] Executed DbCommand (264ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-21 01:59:39.500 -07:00 [INF] Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-21 01:59:40.255 -07:00 [INF] Executed DbCommand (242ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 01:59:40.502 -07:00 [INF] Executed DbCommand (239ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-21 01:59:40.790 -07:00 [INF] Executed DbCommand (269ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-21 01:59:40.813 -07:00 [INF] Applying migration '20250815015807_InitialCreate'.
2025-08-21 01:59:41.740 -07:00 [INF] Executed DbCommand (867ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Employees] (
    [Id] INTEGER NOT NULL,
    [EmployeeCode] TEXT NOT NULL,
    [FullName] TEXT NOT NULL,
    [Email] TEXT NOT NULL,
    [Department] TEXT NOT NULL,
    [DateOfJoining] TEXT NOT NULL,
    [Salary] TEXT NOT NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY ([Id])
);
2025-08-21 01:59:41.998 -07:00 [INF] Executed DbCommand (244ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] INTEGER NOT NULL,
    [Username] TEXT NOT NULL,
    [Password] TEXT NOT NULL,
    [Role] TEXT NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2025-08-21 01:59:42.267 -07:00 [INF] Executed DbCommand (243ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250815015807_InitialCreate', N'9.0.8');
2025-08-21 01:59:42.287 -07:00 [INF] Applying migration '20250820020348_UpdateEmployeeSchema'.
2025-08-21 01:59:42.579 -07:00 [INF] Executed DbCommand (239ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-21 08:01:21.683 -07:00 [INF] Executed DbCommand (639ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 08:01:21.783 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 08:01:22.307 -07:00 [INF] Executed DbCommand (516ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-21 08:01:23.084 -07:00 [INF] Executed DbCommand (254ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-21 08:01:23.839 -07:00 [INF] Executed DbCommand (242ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 08:01:24.395 -07:00 [INF] Executed DbCommand (533ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-21 08:01:24.681 -07:00 [INF] Executed DbCommand (262ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-21 08:01:24.718 -07:00 [INF] Applying migration '20250815015807_InitialCreate'.
2025-08-21 08:01:25.841 -07:00 [INF] Executed DbCommand (1,035ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Employees] (
    [Id] INTEGER NOT NULL,
    [EmployeeCode] TEXT NOT NULL,
    [FullName] TEXT NOT NULL,
    [Email] TEXT NOT NULL,
    [Department] TEXT NOT NULL,
    [DateOfJoining] TEXT NOT NULL,
    [Salary] TEXT NOT NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY ([Id])
);
2025-08-21 08:01:26.100 -07:00 [INF] Executed DbCommand (240ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] INTEGER NOT NULL,
    [Username] TEXT NOT NULL,
    [Password] TEXT NOT NULL,
    [Role] TEXT NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2025-08-21 08:01:26.347 -07:00 [INF] Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250815015807_InitialCreate', N'9.0.8');
2025-08-21 08:01:26.372 -07:00 [INF] Applying migration '20250820020348_UpdateEmployeeSchema'.
2025-08-21 08:01:26.693 -07:00 [INF] Executed DbCommand (238ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-21 08:05:04.848 -07:00 [INF] Executed DbCommand (343ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 08:05:04.939 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 08:05:05.199 -07:00 [INF] Executed DbCommand (252ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-21 08:05:05.788 -07:00 [INF] Executed DbCommand (240ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-21 08:05:06.570 -07:00 [INF] Executed DbCommand (234ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 08:05:06.810 -07:00 [INF] Executed DbCommand (235ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-21 08:05:07.674 -07:00 [INF] Executed DbCommand (855ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-21 08:05:07.695 -07:00 [INF] Applying migration '20250821150440_InitialCreate'.
2025-08-21 08:05:07.955 -07:00 [INF] Executed DbCommand (235ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Employees] (
    [Id] int NOT NULL IDENTITY,
    [EmployeeCode] nvarchar(50) NOT NULL,
    [FullName] nvarchar(max) NOT NULL,
    [Email] nvarchar(450) NOT NULL,
    [Department] nvarchar(max) NOT NULL,
    [DateOfJoining] date NOT NULL,
    [Salary] decimal(18,2) NOT NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY ([Id])
);
2025-08-21 08:05:08.194 -07:00 [INF] Executed DbCommand (232ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [Username] nvarchar(max) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [Role] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])
);
2025-08-21 08:05:08.434 -07:00 [INF] Executed DbCommand (233ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Employees_Email] ON [Employees] ([Email]);
2025-08-21 08:05:08.674 -07:00 [INF] Executed DbCommand (234ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250821150440_InitialCreate', N'9.0.8');
2025-08-21 08:05:09.374 -07:00 [INF] Executed DbCommand (457ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-21 08:22:17.182 -07:00 [INF] Executed DbCommand (273ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 08:22:17.353 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 08:22:17.631 -07:00 [INF] Executed DbCommand (271ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-21 08:22:18.916 -07:00 [INF] Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-21 08:22:19.687 -07:00 [INF] Executed DbCommand (245ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-21 08:22:19.955 -07:00 [INF] Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-21 08:22:20.314 -07:00 [INF] Executed DbCommand (334ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-21 08:22:20.391 -07:00 [INF] Applying migration '20250821152138_AddDateOfJoining'.
2025-08-21 08:22:20.645 -07:00 [INF] Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250821152138_AddDateOfJoining', N'9.0.8');
2025-08-21 08:22:21.164 -07:00 [INF] Executed DbCommand (242ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-21 08:40:16.894 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 08:40:17.005 -07:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-08-21 08:40:17.025 -07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 15:40:17.0201544+00:00');
SELECT changes();
2025-08-21 08:40:17.147 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-08-21 08:40:17.164 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-21 08:40:17.170 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-21 08:40:17.193 -07:00 [INF] Applying migration '20250821153735_InitialCreate'.
2025-08-21 08:40:17.216 -07:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Employees" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Employees" PRIMARY KEY AUTOINCREMENT,
    "EmployeeCode" TEXT NOT NULL,
    "FullName" TEXT NOT NULL,
    "Email" TEXT NOT NULL,
    "Department" TEXT NOT NULL,
    "DateOfJoining" date NOT NULL,
    "Salary" decimal(18,2) NOT NULL
);
2025-08-21 08:40:36.966 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 08:40:37.187 -07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-08-21 08:40:37.243 -07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 15:40:37.2335619+00:00');
SELECT changes();
2025-08-21 08:40:37.434 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-08-21 08:40:37.449 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-21 08:40:37.461 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-21 08:40:37.494 -07:00 [INF] Applying migration '20250821153735_InitialCreate'.
2025-08-21 08:40:37.541 -07:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Employees" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Employees" PRIMARY KEY AUTOINCREMENT,
    "EmployeeCode" TEXT NOT NULL,
    "FullName" TEXT NOT NULL,
    "Email" TEXT NOT NULL,
    "Department" TEXT NOT NULL,
    "DateOfJoining" date NOT NULL,
    "Salary" decimal(18,2) NOT NULL
);
2025-08-21 08:45:15.821 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 08:45:16.017 -07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-08-21 08:45:16.032 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 15:45:16.0298799+00:00');
SELECT changes();
2025-08-21 08:45:17.068 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 15:45:17.0650928+00:00');
SELECT changes();
2025-08-21 08:45:19.083 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 15:45:19.0832004+00:00');
SELECT changes();
2025-08-21 08:45:23.095 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 15:45:23.0953172+00:00');
SELECT changes();
2025-08-21 08:45:31.115 -07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 15:45:31.1106689+00:00');
SELECT changes();
2025-08-21 12:45:41.929 -07:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2025-08-21 12:45:42.026 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 12:45:42.055 -07:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-08-21 12:45:42.063 -07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsLock" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK___EFMigrationsLock" PRIMARY KEY,
    "Timestamp" TEXT NOT NULL
);
2025-08-21 12:45:42.071 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 19:45:42.0704103+00:00');
SELECT changes();
2025-08-21 12:45:42.169 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-08-21 12:45:42.190 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-21 12:45:42.198 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-21 12:45:42.221 -07:00 [INF] Applying migration '20250821153735_InitialCreate'.
2025-08-21 12:45:42.239 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Employees" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Employees" PRIMARY KEY AUTOINCREMENT,
    "EmployeeCode" TEXT NOT NULL,
    "FullName" TEXT NOT NULL,
    "Email" TEXT NOT NULL,
    "Department" TEXT NOT NULL,
    "DateOfJoining" date NOT NULL,
    "Salary" decimal(18,2) NOT NULL
);
2025-08-21 12:45:42.245 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY AUTOINCREMENT,
    "Username" TEXT NOT NULL,
    "Password" TEXT NOT NULL,
    "Role" TEXT NOT NULL
);
2025-08-21 12:45:42.254 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Employees_Email" ON "Employees" ("Email");
2025-08-21 12:45:42.258 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250821153735_InitialCreate', '9.0.8');
2025-08-21 12:45:42.269 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-08-21 12:46:01.917 -07:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-21 12:46:02.091 -07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-08-21 12:46:02.123 -07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-08-21 19:46:02.1097624+00:00');
SELECT changes();
2025-08-21 12:46:02.350 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-08-21 12:46:02.365 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-08-21 12:46:02.377 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-21 12:46:02.396 -07:00 [INF] No migrations were applied. The database is already up to date.
2025-08-21 12:46:02.400 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
2025-08-21 12:46:03.051 -07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Users" AS "u")
2025-08-21 12:46:03.283 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Employees" AS "e")
2025-08-21 12:46:03.498 -07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (Size = 2), @p2='?' (Size = 20), @p3='?' (Size = 6), @p4='?' (Size = 8), @p5='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Employees" ("DateOfJoining", "Department", "Email", "EmployeeCode", "FullName", "Salary")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "Id";
2025-08-21 12:46:03.530 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (Size = 2), @p2='?' (Size = 22), @p3='?' (Size = 6), @p4='?' (Size = 10), @p5='?' (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Employees" ("DateOfJoining", "Department", "Email", "EmployeeCode", "FullName", "Salary")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING "Id";
2025-08-21 12:46:03.540 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 8), @p1='?' (Size = 5), @p2='?' (Size = 5)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Password", "Role", "Username")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
2025-08-21 12:46:04.103 -07:00 [INF] User profile is available. Using 'C:\Users\LAPTOP WORLD\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-21 12:46:04.564 -07:00 [WRN] The WebRootPath was not found: D:\VS Cummunity Projects\employee-management-monorepo\employee-management-system\Backend\EmployeeManagementSystem.Api\wwwroot. Static files may be unavailable.
2025-08-21 12:46:05.100 -07:00 [INF] Now listening on: https://localhost:7164
2025-08-21 12:46:05.105 -07:00 [INF] Now listening on: http://localhost:5151
2025-08-21 12:46:05.447 -07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-21 12:46:05.449 -07:00 [INF] Hosting environment: Development
2025-08-21 12:46:05.451 -07:00 [INF] Content root path: D:\VS Cummunity Projects\employee-management-monorepo\employee-management-system\Backend\EmployeeManagementSystem.Api
2025-08-21 12:46:07.794 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger - null null
2025-08-21 12:46:08.160 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger - 301 0 null 390.0451ms
2025-08-21 12:46:08.324 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/_framework/aspnetcore-browser-refresh.js - null null
2025-08-21 12:46:08.324 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/_vs/browserLink - null null
2025-08-21 12:46:08.324 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger/swagger-ui.css - null null
2025-08-21 12:46:08.324 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger/index.css - null null
2025-08-21 12:46:08.386 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger/swagger-ui-standalone-preset.js - null null
2025-08-21 12:46:08.389 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger/swagger-ui-bundle.js - null null
2025-08-21 12:46:08.421 -07:00 [INF] Sending file. Request path: '/index.css'. Physical path: 'N/A'
2025-08-21 12:46:08.425 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger/index.css - 200 202 text/css 100.9839ms
2025-08-21 12:46:08.430 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger/index.js - null null
2025-08-21 12:46:08.460 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/_framework/aspnetcore-browser-refresh.js - 200 16541 application/javascript; charset=utf-8 135.952ms
2025-08-21 12:46:08.568 -07:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-08-21 12:46:08.593 -07:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-08-21 12:46:08.615 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger/swagger-ui.css - 200 154949 text/css 290.4092ms
2025-08-21 12:46:08.633 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger/swagger-ui-standalone-preset.js - 200 229223 text/javascript 247.1945ms
2025-08-21 12:46:08.795 -07:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-08-21 12:46:08.802 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/_vs/browserLink - 200 null text/javascript; charset=UTF-8 474.5073ms
2025-08-21 12:46:08.810 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger/swagger-ui-bundle.js - 200 1485241 text/javascript 421.5875ms
2025-08-21 12:46:08.964 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger/index.js - 200 null application/javascript;charset=utf-8 533.7754ms
2025-08-21 12:46:09.295 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger/favicon-16x16.png - null null
2025-08-21 12:46:09.313 -07:00 [INF] Sending file. Request path: '/favicon-16x16.png'. Physical path: 'N/A'
2025-08-21 12:46:09.316 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger/favicon-16x16.png - 499 665 image/png 20.4629ms
2025-08-21 12:46:09.691 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/swagger/v1/swagger.json - null null
2025-08-21 12:46:09.758 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 66.8051ms
2025-08-21 12:46:38.320 -07:00 [INF] Request starting HTTP/2 POST https://localhost:7164/api/Auth/login - application/json 51
2025-08-21 12:46:38.332 -07:00 [INF] CORS policy execution failed.
2025-08-21 12:46:38.336 -07:00 [INF] Request origin https://localhost:7164 does not have permission to access the resource.
2025-08-21 12:46:40.636 -07:00 [INF] Executing endpoint 'EmployeeManagementSystem.Api.Controllers.AuthController.Login (EmployeeManagementSystem.Api)'
2025-08-21 12:46:40.689 -07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EmployeeManagementSystem.Api.DTOs.LoginDto) on controller EmployeeManagementSystem.Api.Controllers.AuthController (EmployeeManagementSystem.Api).
2025-08-21 12:46:41.091 -07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__loginDto_Username_0='?' (Size = 5), @__loginDto_Password_1='?' (Size = 8)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Password", "u"."Role", "u"."Username"
FROM "Users" AS "u"
WHERE "u"."Username" = @__loginDto_Username_0 AND "u"."Password" = @__loginDto_Password_1
LIMIT 1
2025-08-21 12:46:41.116 -07:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2025-08-21 12:46:41.161 -07:00 [INF] Executed action EmployeeManagementSystem.Api.Controllers.AuthController.Login (EmployeeManagementSystem.Api) in 459.0319ms
2025-08-21 12:46:41.166 -07:00 [INF] Executed endpoint 'EmployeeManagementSystem.Api.Controllers.AuthController.Login (EmployeeManagementSystem.Api)'
2025-08-21 12:46:41.179 -07:00 [INF] Request finished HTTP/2 POST https://localhost:7164/api/Auth/login - 401 null application/problem+json; charset=utf-8 2859.331ms
2025-08-21 12:48:18.818 -07:00 [INF] Request starting HTTP/2 POST https://localhost:7164/api/Auth/login - application/json 51
2025-08-21 12:48:18.827 -07:00 [INF] CORS policy execution failed.
2025-08-21 12:48:18.830 -07:00 [INF] Request origin https://localhost:7164 does not have permission to access the resource.
2025-08-21 12:48:18.834 -07:00 [INF] Executing endpoint 'EmployeeManagementSystem.Api.Controllers.AuthController.Login (EmployeeManagementSystem.Api)'
2025-08-21 12:48:18.840 -07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EmployeeManagementSystem.Api.DTOs.LoginDto) on controller EmployeeManagementSystem.Api.Controllers.AuthController (EmployeeManagementSystem.Api).
2025-08-21 12:48:18.971 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__loginDto_Username_0='?' (Size = 5), @__loginDto_Password_1='?' (Size = 8)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Password", "u"."Role", "u"."Username"
FROM "Users" AS "u"
WHERE "u"."Username" = @__loginDto_Username_0 AND "u"."Password" = @__loginDto_Password_1
LIMIT 1
2025-08-21 12:48:19.131 -07:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-08-21 12:48:19.140 -07:00 [INF] Executed action EmployeeManagementSystem.Api.Controllers.AuthController.Login (EmployeeManagementSystem.Api) in 294.5872ms
2025-08-21 12:48:19.148 -07:00 [INF] Executed endpoint 'EmployeeManagementSystem.Api.Controllers.AuthController.Login (EmployeeManagementSystem.Api)'
2025-08-21 12:48:19.151 -07:00 [INF] Request finished HTTP/2 POST https://localhost:7164/api/Auth/login - 200 null application/json; charset=utf-8 332.9003ms
2025-08-21 12:48:46.792 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/api/Employee - null null
2025-08-21 12:48:46.901 -07:00 [INF] Executing endpoint 'EmployeeManagementSystem.Api.Controllers.EmployeeController.GetAll (EmployeeManagementSystem.Api)'
2025-08-21 12:48:46.912 -07:00 [INF] Route matched with {action = "GetAll", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller EmployeeManagementSystem.Api.Controllers.EmployeeController (EmployeeManagementSystem.Api).
2025-08-21 12:48:47.094 -07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "e"."Id", "e"."DateOfJoining", "e"."Department", "e"."Email", "e"."EmployeeCode", "e"."FullName", "e"."Salary"
FROM "Employees" AS "e"
2025-08-21 12:48:47.131 -07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[EmployeeManagementSystem.Api.DTOs.EmployeeDto, EmployeeManagementSystem.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-21 12:48:47.163 -07:00 [INF] Executed action EmployeeManagementSystem.Api.Controllers.EmployeeController.GetAll (EmployeeManagementSystem.Api) in 243.5543ms
2025-08-21 12:48:47.172 -07:00 [INF] Executed endpoint 'EmployeeManagementSystem.Api.Controllers.EmployeeController.GetAll (EmployeeManagementSystem.Api)'
2025-08-21 12:48:47.176 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/api/Employee - 200 null application/json; charset=utf-8 383.9395ms
2025-08-21 12:57:47.919 -07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7164/api/Employee - null null
2025-08-21 12:57:47.942 -07:00 [INF] CORS policy execution successful.
2025-08-21 12:57:47.951 -07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7164/api/Employee - 204 null null 32.8396ms
2025-08-21 12:57:47.964 -07:00 [INF] Request starting HTTP/2 GET https://localhost:7164/api/Employee - null null
2025-08-21 12:57:47.986 -07:00 [INF] CORS policy execution successful.
2025-08-21 12:57:47.999 -07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/14/2025 8:37:33 AM', Current time (UTC): '8/21/2025 7:57:47 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-21 12:57:48.103 -07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/14/2025 8:37:33 AM', Current time (UTC): '8/21/2025 7:57:47 PM'.
2025-08-21 12:57:48.112 -07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-21 12:57:48.132 -07:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-21 12:57:48.135 -07:00 [INF] Request finished HTTP/2 GET https://localhost:7164/api/Employee - 401 0 null 170.8137ms
